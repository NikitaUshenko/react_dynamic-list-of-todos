{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.js","App.js","index.js"],"names":["TodoItems","_ref","todo","react_default","a","createElement","className","user","name","email","type","defaultChecked","completed","title","TodoList","todos","map","TodoItem","key","id","getTodos","Object","asyncToGenerator","regenerator_default","mark","_callee","usersUrl","todosResponse","usersResponse","users","wrap","_context","prev","next","fetch","sent","json","abrupt","objectSpread","find","userId","stop","apply","this","arguments","sortPosts","sortField","direction","sort","postA","postB","localeCompare","App","state","visibleTodos","setState","_ref2","_this2","onClick","handleSorting","components_TodoList","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5c5369dd.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TodoItems({ todo }) {\n  return (\n    <li className=\"todo-item\">\n      <div>\n        <div className=\"user-details\">\n          <div className=\"sidebar\">\n            <h2 className=\"user-name\">{todo.user.name}</h2>\n            <p className=\"user-info\">\n              <u>E-mail:</u> {todo.user.email}\n            </p>\n          </div>\n        </div>\n      </div>\n      <label>\n        <input type=\"checkbox\" defaultChecked={todo.completed} />\n        {todo.title}\n      </label>\n    </li>\n  );\n}\n\nexport default TodoItems;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ todos }) {\n  return (\n    <div>\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id}/>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nconst getTodos = async() => {\n  const todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n  const usersUrl = 'https://jsonplaceholder.typicode.com/users';\n\n  const todosResponse = await fetch(todosUrl);\n  const todos = await todosResponse.json();\n\n  const usersResponse = await fetch(usersUrl);\n  const users = await usersResponse.json();\n\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(user => todo.userId === user.id),\n  }));\n};\n\nconst sortPosts = (todos, sortField, direction) => {\n  return todos\n    .sort((postA, postB) => {\n      switch (sortField) {\n        case 'name':\n          return postA.user.name.localeCompare(postB.user.name) * direction;\n        case 'completed':\n          return (direction > 0)\n            ? postA.completed - postB.completed\n            : postB.completed - postA.completed;\n        default:\n          return 0;\n      }\n    });\n};\n\nclass App extends Component{\n  state = {\n    todos: [],\n    visibleTodos: [],\n    sortField: '',\n    direction: 1,\n  }\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos,\n      visibleTodos: todos,\n    });\n  }\n\n  handleSorting(sortField) {\n    this.setState(({ todos, direction }) => ({\n      sortField,\n      visibleTodos: sortPosts(todos, sortField, direction),\n      direction: direction === 1 ? -1 : 1,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Static list of todos</h1>\n        <span>Sort by: </span>\n        <button onClick={() => this.handleSorting('name')}>Name</button>\n        <button\n          onClick={() => this.handleSorting('completed')}\n        >\n          Completed\n        </button>\n        <TodoList\n          todos={this.state.visibleTodos}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}